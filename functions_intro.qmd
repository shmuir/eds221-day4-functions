---
title: "Functions"
date: "17 August 2023"
author: "Sam Muir"
format: html
editor: visual
---

```{r}
library(tidyverse)
```


## Functions

Make a function that doubles a values

```{r}
double_value <- function(my_dollars) {
  print(my_dollars * 2)
}
```

-   Print: show me this

```{r}
my_dollars = 34

double_value(my_dollars)
double_value(my_dollars = 10.34)
double_value(10.67)
```

```{r}
double_value_2 <- function(my_dollars) {
  my_dollars * 2
}
```

-   Return: store this so I can use it later

```{r}
double_value_2(34)
```

With a vector

```{r}
monthly_income <- c(10.76, 45.60, 30.7)

double_value(monthly_income)
```

Create a function that returns a restaurant name given an animal and favorite food

```{r}
name_restaurant <- function(animal, food) {
  print(paste0(animal, food))
}
```

```{r}
name_restaurant(animal = "bird", food = "sushi")
```

Given temp. in ºF write a function that converts it to ºC

```{r}
convert_to_celcius <- function(temp_f) {
  print(paste((temp_f - 32) * (5/9), "ºC"))
}
```

```{r}
convert_to_celcius(50)
```

Create a function given age and hometown, return "I am \_\_ years old, and I'm from \_\_\_"

```{r}
print_age_home <- function(age, hometown) {
  print(paste("I am", age, "years old, and I'm from", hometown))
}
```

```{r}
print_age_home(23, "Goleta, CA")
```

## Functions with Conditionals

```{r}
calc_animal_age <- function(animal, age_human_yrs) {
  if (animal == "dog") {
    age_human_yrs * 7
  } else if (animal == "goat") {
    age_human_yrs * 4.7
  } else {
    print("Please enter either dog or goat and its age in human years.")
  }
}
```

```{r}
calc_animal_age("dog", 7)
calc_animal_age("goat", 3)
calc_animal_age("cat", 12)
```

Write a function that will return that, given temp in Kelvin, if a user selects "Metric" to the scale, return ºC, or if they select "English" then return degrees in ºF

```{r}
convertKelvin <- function(temp_system, temp) {
  if (temp_system == "Metric") {
    print(temp - 273.15)
  } else if (temp_system == "English") {
    ((temp - 273.15) * (9/5)) + 32
  } else {
    print("Enter temperature value, specifying either Metric or English")
  }
}
```

```{r}
convertKelvin(temp_system = "Metric", temp = 50)
convertKelvin("English", 50)
convertKelvin("Celcius", 25)
```


## More functions

Create a subset within a function and return something based on that subset.

```{r}
dog_choice <- data.frame(dog_name = c("Khora", "Teddy", "Waffle", "Banjo", "Tallie"), 
                         food = c("everything", "salmon", "pancakes", "chicken", "enchiladas"))
```

Here's one way to do this 

```{r}
dog_menu <- function(enter_dog_name) {
  selected_dog <- dplyr::filter(dog_choice, dog_name == enter_dog_name)
 print(paste("My name is", selected_dog$dog_name, "and my favorite food is", selected_dog$food))
}

dog_menu(enter_dog_name = "Teddy")
dog_menu("Waffle")
```

## Function with a for loop

If variable is numeric, return the means

```{r}
df_means <- function(df) {
  for (i in seq_along(df)) {
    col_mean <- round(mean(df[[i]], na.rm = TRUE), 2)
    column_name <- colnames(df[i])
    print(paste("The mean value of", column_name, "is", col_mean))
  }
}
```

```{r}
df_means(mtcars)
df_means(faithful)
```


